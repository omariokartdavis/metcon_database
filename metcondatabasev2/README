Functionality to add:
- Add workout instance for users
- change number of times completed in base workout model to add together all times that workout was completed from all instances
- change number of times completed in instance to be specific to that instance
- Create search and filter funtionality for workouts based on movements or classification.
        use this link: https://www.w3schools.com/howto/howto_js_filter_dropdown.asp
                search filter but without dropdown: https://www.w3schools.com/howto/howto_js_filter_lists.asp
        this might help too: https://fooplugins.github.io/FooTable/docs/examples/advanced/filter-dropdown.html
- Create a user homepage
- Create user accounts and login page
- Change create movement page to a popup page when link is clicked (this should allow for on page adding and refreshing of movements)
- Allow for on page refreshing of movement tags/classifications
- Allow for database updating of movement tags for all workouts at once when a new movement is added
- Come up with a better way to list workouts instead of by workout number
- Add abbreviations to some movements?
        could change movement_list to a list of lists:
        movement_list = [
                ['Pull Up', 'Upper Body', ['abbrvs']],...]
         then in the for loop just use:
         for i in all_movements:
                for x, y, z in i:
                        movement = Movement(name=x,
                                        classification = Classification.objects.get(name=y),
                                        abbreviations = [a for a in z]

Styling:
- Create stylebook for all screens
- Create table for viewing workouts
        similar to the styling of this: https://fooplugins.github.io/FooTable/docs/examples/advanced/filter-dropdown.html

-Import workouts from mainsite using beautiful soup code. Should be able to run beatuiful soup file from inside the manage.py shell
    using `exec(open('filename.py').read())`
    this depends on if mainsite has changed their html to get their workouts. would require rework of the beautiful soup code
