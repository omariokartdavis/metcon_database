# Generated by Django 2.1.1 on 2019-05-31 02:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import metcons.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], default='M', help_text='Is this workout (and the weights you have entered) applicable for both Males and Females or only one?', max_length=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Upper Body', 'Upper Body'), ('Lower Body', 'Lower Body'), ('Total Body', 'Total Body'), ('Cardio', 'Cardio'), ('Core', 'Core')], default='Total Body', help_text='Is this movement upper, lower, total body or cardio?', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_completed', models.DateField(default=metcons.models.get_default_localtime_date)),
            ],
            options={
                'ordering': ['-date_completed'],
            },
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('classification', models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='metcons.Classification')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_workout_completed', models.DateTimeField(default=django.utils.timezone.now)),
                ('result_text', models.TextField(blank=True, max_length=2000)),
                ('duration_in_seconds', models.IntegerField(blank=True, default=0, null=True, verbose_name='Duration (sec)')),
            ],
        ),
        migrations.CreateModel(
            name='ResultFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='uploads/%Y/%m/%d/')),
                ('caption', models.TextField(blank=True, max_length=250)),
                ('content_type', models.CharField(blank=True, max_length=100)),
                ('result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='metcons.Result')),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_added_to_database', models.DateTimeField(auto_now_add=True)),
                ('number_of_times_completed', models.IntegerField(default=0, verbose_name='Times Completed')),
                ('workout_text', models.TextField(max_length=2000)),
                ('scaling_or_description_text', models.TextField(blank=True, max_length=4000, null=True)),
                ('where_workout_came_from', models.CharField(blank=True, max_length=200)),
                ('estimated_duration_in_seconds', models.IntegerField(blank=True, default=0, null=True, verbose_name='Duration (sec)')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], default='B', help_text='Is this workout applicable for both Males and Females or only one?', max_length=1, null=True)),
                ('classification', models.ForeignKey(blank=True, default=3, null=True, on_delete=django.db.models.deletion.CASCADE, to='metcons.Classification')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('movements', models.ManyToManyField(blank=True, to='metcons.Movement')),
            ],
            options={
                'ordering': ['-date_created', '-number_of_times_completed', '-id'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular workout', primary_key=True, serialize=False)),
                ('date_added_by_user', models.DateTimeField(auto_now_add=True)),
                ('number_of_times_completed', models.IntegerField(default=0, verbose_name='Times Completed')),
                ('duration_in_seconds', models.IntegerField(blank=True, default=0, null=True, verbose_name='Duration (sec)')),
                ('edited_workout_text', models.TextField(blank=True, max_length=2000, null=True)),
                ('edited_scaling_text', models.TextField(blank=True, max_length=4000, null=True)),
                ('current_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('dates_to_be_completed', models.ManyToManyField(blank=True, related_name='dates_to_be_completed', to='metcons.Date')),
                ('dates_workout_completed', models.ManyToManyField(blank=True, related_name='dates_workout_completed', to='metcons.Date')),
                ('oldest_completed_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oldest_completed_date', to='metcons.Date')),
                ('workout', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='metcons.Workout')),
                ('youngest_scheduled_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='youngest_scheduled_date', to='metcons.Date')),
            ],
            options={
                'ordering': ['-number_of_times_completed', '-date_added_by_user', '-id'],
            },
        ),
        migrations.AddField(
            model_name='result',
            name='workoutinstance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='metcons.WorkoutInstance'),
        ),
    ]
